# 0.4840741
summary(osc_icon_model.ld)
# both iconicity and OSCld are significant predictors
icon_model.ortho.aic - osc_icon_model.ld.aic
# OSCld*morph interaction
osc_by_morph_model.ld <- lm(
formula = AoA ~ n_chars.z + concr.z + val.z + freq.z + old.z + snd.z + morph*OSC_ld.z, data = df.ortho
)
osc_by_morph_model.ld.aic = AIC(osc_by_morph_model.ld)
# 38296.87
summary(osc_by_morph_model.ld)$r.sq
# 0.444643
summary(osc_by_morph_model.ld)
# interaction is significant
osc_model.ld.aic - osc_by_morph_model.ld.aic
quantile(df.ortho$OSC_ld.z, c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))
osc_by_morph_model.ld.df = as.data.frame(
ggpredict(
osc_by_morph_model.ld, terms = c(
"OSC_ld.z[-3.5470053, -1.3026135, -0.8370214, -0.5002286, -0.2273463, 0.0241192, 0.2703450, 0.5157738, 0.8055791, 1.2555764, 3.1631114]",
"morph")
)
)
ggplot(osc_by_morph_model.ld.df, aes(x = x, y = predicted, colour = group, linetype = group)) +
geom_line(alpha = 0.9) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.25) +
xlab(expression('OSC'[ld])) +
ylab('AoA') +
ggtitle(expression("Interaction of" ~ OSC[ld] ~ "and morphological status on AoA")) +
labs(colour = "SND", fill = "SND", linetype = 'SND') +
scale_x_continuous(breaks = c(-1.5, 0, 1.5, 3)) +
theme(
legend.justification = c(1, 0),
legend.position = "bottom",
legend.direction = "horizontal",
)
##### MULTIPLE REGRESSION - PHONOLOGY #####
# Base Model
base_model.phono <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph, data = df.phono
)
summary(base_model.phono)$r.sq
# 0.4580349
summary(base_model.phono)
# all predictors are significant
VIF(base_model.phono)
# only moderate collinearity between number of phonemes and PND
base.phono.aic <- AIC(base_model.phono)
# Base Model with pnd*snd interaction
base_model.phono.int <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z*snd.z + morph, data = df.phono
)
summary(base_model.phono.int)$r.sq
# 0.45815
summary(base_model.phono.int)
# target interaction isn't significant
VIF(base_model.phono.int)
# no extra collinearity risk
base_model.phono.int.aic <- AIC(base_model.phono.int)
# 30443.12
base.phono.aic - base_model.phono.int.aic
quantile(df.phono$snd.z, c(0.05, 0.5, 0.95))
quantile(df.phono$pnd.z, c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))
base_model.phono.int.df = as.data.frame(
ggpredict(
base_model.phono.int, terms = c(
"pnd.z[-2.16071576, -0.85287765, -0.85287765, -0.47100090, -0.35634542, -0.05141835, 0.29885338, 0.61930081, 0.93519895, 1.30749626, 2.16767218 ]",
"snd.z[-1.65190024, -0.04120388, 1.60161652]")
)
)
base_model.phono.int.df$group <- mapvalues(
base_model.phono.int.df$group,
from = c("-1.65190024", "-0.04120388", "1.60161652"),
to = c("5%", "50%", "95%")
)
ggplot(base_model.phono.int.df, aes(x = x, y = predicted, colour = group, linetype = group)) +
geom_line(alpha = 0.9) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.25) +
xlab('PND') +
ylab('AoA') +
ggtitle(expression("Interaction of PND and SND on objective AoA")) +
labs(colour = "SND", fill = "SND", linetype = 'SND') +
scale_x_continuous(breaks = c(-2, -1, 0, 1, 2)) +
theme(
legend.justification = c(1, 0),
legend.position = "bottom",
legend.direction = "horizontal",
)
# Iconicity control
icon_model.phono <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph + iconicity.z, data = df.phono.icon
)
icon_model.phono.aic = AIC(icon_model.phono)
# 7229.584
summary(icon_model.phono)$r.sq
# 0.4760113
summary(icon_model.phono)
# iconicity is a significant predictor
cor.test(df.phono.icon$iconicity.z, df.phono.icon$AoA)
# target embedded neighbors
psc_model.te <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph + PSC_te.z, data = df.phono
)
psc_model.te.aic = AIC(psc_model.te)
# 30426.31
summary(psc_model.te)$r.sq
# 0.4595699
summary(psc_model.te)
# PSCte is a significant predictor
base.phono.aic - psc_model.te.aic
# target embedded neighbors over iconicity
psc_icon_model.te <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph + iconicity.z + PSC_te.z, data = df.phono.icon
)
psc_icon_model.te.aic = AIC(psc_icon_model.te)
# 7227.144
summary(psc_icon_model.te)$r.sq
# 0.4773233
summary(psc_icon_model.te)
# iconicity is significant, PSCte only slightly
icon_model.phono.aic - psc_icon_model.te.aic
# PSCte*morph interaction
psc_by_morph_model.te <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph*PSC_te.z, data = df.phono
)
psc_by_morph_model.te.aic = AIC(psc_by_morph_model.te)
# 30404.1
summary(psc_by_morph_model.te)$r.sq
# 0.4616077
summary(psc_by_morph_model.te)
# target interaction is significant
psc_model.te.aic - psc_by_morph_model.te.aic
quantile(df.phono$PSC_te.z, c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))
psc_by_morph_model.te.df = as.data.frame(
ggpredict(
psc_by_morph_model.te, terms = c(
"PSC_te.z[-2.1897122, -1.3872573, -1.1133175, -0.7636885, -0.2131268, 0.2770647, 0.5643153, 0.7923830, 1.0100233, 1.2435375, 1.8546669]",
"morph")
)
)
ggplot(psc_by_morph_model.te.df, aes(x = x, y = predicted, colour = group, linetype = group)) +
geom_line(alpha = 0.9) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.25) +
xlab(expression('PSC'[te])) +
ylab('AoA') +
ggtitle(expression("Interaction of" ~ PSC[te] ~ "and morphological status on AoA")) +
labs(colour = "SND", fill = "SND", linetype = 'SND') +
scale_x_continuous(breaks = c(-1.5, 0, 1.5, 3)) +
theme(
legend.justification = c(1, 0),
legend.position = "bottom",
legend.direction = "horizontal",
)
# Levenshtein neighbors
psc_model.ld <- lm(formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph + PSC_ld.z, data = df.phono)
psc_model.ld.aic = AIC(psc_model.ld)
# 30194.1
summary(psc_model.ld)$r.sq
# 0.4788061
summary(psc_model.ld)
# PSCld is significant
base.phono.aic - psc_model.ld.aic
# Levenshtein neighbors over iconicity
psc_icon_model.ld <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph + iconicity.z + PSC_ld.z, data = df.phono.icon
)
psc_icon_model.ld.aic = AIC(psc_icon_model.ld)
# 7213.149
summary(psc_icon_model.ld)$r.sq
# 0.4814375
summary(psc_icon_model.ld)
# both iconicity and PSCld are significant
icon_model.phono.aic - psc_icon_model.ld.aic
# PSCld*morph interaction
psc_by_morph_model.ld <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph*PSC_ld.z, data = df.phono
)
psc_by_morph_model.ld.aic = AIC(psc_by_morph_model.ld)
# 30195.96
summary(psc_by_morph_model.ld)$r.sq
# 0.4788168
summary(psc_by_morph_model.ld)
# target interaction is not significant
psc_model.ld.aic - psc_by_morph_model.ld.aic
##### GAMs #####
# Base gam
base_gam.phono <- bam(AoA ~ s(n_phons.z) + s(concr.z) + s(val.z) + s(freq.z) + s(pnd.z) + s(snd.z) + morph, data = df.phono)
summary(base_gam.phono)
# all smooths are significant
base.phono.aic.gam <- AIC(base_gam.phono)
par(mfrow=c(2,3))
plot_smooth(base_gam.phono, view="freq.z", rug=TRUE, col="steelblue", main = "Phonology predictors (base gam)",
xlab = 'frequency', ylab = 'AoA')
plot_smooth(base_gam.phono, view="pnd.z", rug=TRUE, col="steelblue",
xlab = 'PND', ylab = 'AoA')
plot_smooth(base_gam.phono, view="n_phons.z", rug=TRUE, col="steelblue",
xlab = 'Length', ylab = 'AoA')
plot_smooth(base_gam.phono, view="concr.z", rug=TRUE, col="steelblue",
xlab = 'Concreteness', ylab = 'AoA')
plot_smooth(base_gam.phono, view="val.z", rug=TRUE, col="steelblue",
xlab = 'Valence', ylab = 'AoA')
plot_smooth(base_gam.phono, view="snd.z", rug=TRUE, col="steelblue",
xlab = 'SND', ylab = 'AoA')
base.phono.aic.gam - base_gam.phono.int.aic
# Base gam with pnd*snd interaction
base_gam.phono.int <- bam(AoA ~ s(n_phons.z) + s(concr.z) + s(val.z) + s(freq.z) + s(pnd.z) + s(snd.z) + ti(pnd.z, snd.z) + morph,
data = df.phono)
summary(base_gam.phono.int)
# tensor product not significant
base_gam.phono.int.aic <- AIC(base_gam.phono.int)
base.phono.aic.gam - base_gam.phono.int.aic
par(mfrow=c(1, 1))
vis.gam(base_gam.phono.int, too.far=0.1, color="topo", plot.type="contour",
view=c('snd.z', 'pnd.z'), main = "composite smooth: PND, SND", xlab = "SND", ylab = "PND")
# Iconicity control
icon_gam.phono <- bam(
AoA ~ s(n_phons.z) + s(concr.z) + s(val.z) + s(freq.z) + s(pnd.z) + s(snd.z) + morph + s(iconicity.z), data = df.phono.icon
)
icon_gam.phono.aic = AIC(icon_gam.phono)
summary(icon_gam.phono)
plot_smooth(icon_gam.phono, view="iconicity.z", rug=TRUE, col="steelblue", main='Effect of iconicity on AoA (phono)',
xlab = 'Iconicity', ylab = 'AoA')
# target embedded neighbors
psc_gam.te <- bam(AoA ~ s(n_phons.z) + s(concr.z) + s(val.z) + s(freq.z) + s(pnd.z) + s(snd.z) + morph + s(PSC_te.z), data = df.phono)
psc_gam.te.aic = AIC(psc_gam.te)
summary(psc_gam.te)
# smooth for PSC_te is significant
base.phono.aic.gam - psc_gam.te.aic
plot_smooth(psc_gam.te, view="PSC_te.z", rug=TRUE, col="steelblue", main='Effect of PSC[te] on AoA', xlab = expression('PSC'[te]), ylab = 'AoA')
# target embedded neighbors over iconicity
psc_icon_gam.te <- bam(
AoA ~ s(n_phons.z) + s(concr.z) + s(val.z) + s(freq.z) + s(pnd.z) + s(snd.z) + morph + s(iconicity.z) + s(PSC_te.z),
data = df.phono.icon
)
psc_icon_gam.te.aic = AIC(psc_icon_gam.te)
summary(psc_icon_gam.te)
# smooth for PSCte significant after including iconicity
icon_gam.phono.aic - psc_icon_gam.te.aic
par(mfrow=c(1, 2))
plot_smooth(psc_icon_gam.te, view="PSC_te.z", rug=TRUE, col="steelblue",
main='Effect of PSC[te] abd Iconicity on AoA', xlab = expression('PSC'[te]), ylab = 'AoA')
plot_smooth(psc_icon_gam.te, view="iconicity.z", rug=TRUE, col="steelblue", xlab = 'Iconicity', ylab = 'AoA')
# Levenshtein neighbors
psc_gam.ld <- bam(AoA ~ s(n_phons.z) + s(concr.z) + s(val.z) + s(freq.z) + s(pnd.z) + s(snd.z) + morph + s(PSC_ld.z), data = df.phono)
psc_gam.ld.aic = AIC(psc_gam.ld)
summary(psc_gam.ld)
# smooth for PSCld is significant
base.phono.aic.gam - psc_gam.ld.aic
par(mfrow=c(1, 1))
plot_smooth(psc_gam.ld, view="PSC_ld.z", rug=TRUE, col="steelblue", main='Effect of PSC[ld] on AoA', xlab = expression('PSC'[ld]), ylab = 'AoA')
# Levenshtein neighbors over iconicity
psc_icon_gam.ld <- bam(
AoA ~ s(n_phons.z) + s(concr.z) + s(val.z) + s(freq.z) + s(pnd.z) + s(snd.z) + morph + s(iconicity.z) + s(PSC_ld.z),
data = df.phono.icon
)
psc_icon_gam.ld.aic = AIC(psc_icon_gam.ld)
summary(psc_icon_gam.ld)
# both smooths are significant
icon_gam.phono.aic - psc_icon_gam.ld.aic
##### RANDOM BASELINE #####
setwd("/media/gioca90/University/TiU/Research/Projects/ba_thesis/output/FSCrandom/")
iters = seq(1, 1000, 1)
stats_rnd = NULL
for (i in iters) {
print(sprintf("Processing iteration %s", i))
df_rnd = read.csv(sprintf("df%s.csv", i), header = T, sep = ',')
colnames(df_rnd)[which(names(df_rnd) == "OSC_te")] <- "OSC_te_rnd"
colnames(df_rnd)[which(names(df_rnd) == "OSC_ld")] <- "OSC_ld_rnd"
colnames(df_rnd)[which(names(df_rnd) == "PSC_te")] <- "PSC_te_rnd"
colnames(df_rnd)[which(names(df_rnd) == "PSC_ld")] <- "PSC_ld_rnd"
df.phono = merge(df.phono, df_rnd[c('word', "PSC_te_rnd", "PSC_ld_rnd")], by='word')
df.ortho = merge(df.ortho, df_rnd[c('word', "OSC_te_rnd", "OSC_ld_rnd")], by='word')
df.ortho$OSC_te_rnd.z = c(scale(box_cox_transf(df.ortho$OSC_te_rnd + 0.0001, -10, 10), center = T, scale = T))
df.ortho$OSC_ld_rnd.z = c(scale(box_cox_transf(df.ortho$OSC_ld_rnd + 0.0001, -10, 10), center = T, scale = T))
cor.aoa.osc_te_rnd = cor(df.ortho$OSC_te_rnd.z, df.ortho$AoA)
cor.aoa.osc_ld_rnd = cor(df.ortho$OSC_ld_rnd.z, df.ortho$AoA)
df.phono$PSC_te_rnd.z = c(scale(box_cox_transf(df.phono$PSC_te_rnd + 0.0001, -10, 10), center = T, scale = T))
df.phono$PSC_ld_rnd.z = c(scale(box_cox_transf(df.phono$PSC_ld_rnd + 0.0001, -10, 10), center = T, scale = T))
cor.aoa.psc_te_rnd = cor(df.phono$PSC_te_rnd.z, df.phono$AoA)
cor.aoa.psc_ld_rnd = cor(df.phono$PSC_ld_rnd.z, df.phono$AoA)
osc_model.te.rnd <- lm(formula = AoA ~ n_chars.z + concr.z + val.z + freq.z + old.z + snd.z + morph + OSC_te_rnd.z, data = df.ortho)
deltaAIC.osc_te_rnd = base.ortho.aic - AIC(osc_model.te.rnd)
osc_model.ld.rnd <- lm(formula = AoA ~ n_chars.z + concr.z + val.z + freq.z + old.z + snd.z + morph + OSC_ld_rnd.z, data = df.ortho)
deltaAIC.osc_ld_rnd = base.ortho.aic - AIC(osc_model.ld.rnd)
psc_model.te.rnd <- lm(formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph + PSC_te_rnd.z, data = df.phono)
deltaAIC.psc_te_rnd = base.phono.aic - AIC(psc_model.te.rnd)
psc_model.ld.rnd <- lm(formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z + snd.z + morph + PSC_ld_rnd.z, data = df.phono)
deltaAIC.psc_ld_rnd = base.phono.aic - AIC(psc_model.ld.rnd)
df.phono = subset(df.phono, select = -c(PSC_te_rnd, PSC_ld_rnd))
df.ortho = subset(df.ortho, select = -c(OSC_te_rnd, OSC_ld_rnd))
stats_rnd = rbind(stats_rnd,
data.frame(i,
cor.aoa.osc_te_rnd, cor.aoa.osc_ld_rnd, cor.aoa.psc_te_rnd, cor.aoa.psc_ld_rnd,
deltaAIC.osc_te_rnd, deltaAIC.osc_ld_rnd, deltaAIC.psc_te_rnd, deltaAIC.psc_ld_rnd))
}
rm(i,
deltaAIC.osc_te_rnd, deltaAIC.osc_ld_rnd, deltaAIC.psc_te_rnd, deltaAIC.psc_ld_rnd,
cor.aoa.osc_te_rnd, cor.aoa.osc_ld_rnd, cor.aoa.psc_te_rnd, cor.aoa.psc_ld_rnd,
psc_model.ld.rnd, psc_model.te.rnd, osc_model.ld.rnd, osc_model.te.rnd, df_rnd)
subtitle_osc_rnd.te = expression(OSC[te-rnd])
subtitle_osc_rnd.ld = expression(OSC[ld-rnd])
subtitle_psc_rnd.te = expression(PSC[te-rnd])
subtitle_psc_rnd.ld = expression(PSC[ld-rnd])
# Correlations
p1.fsc_rnd = ggplot(data = stats_rnd, aes(x=cor.aoa.osc_te_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = cor(df.ortho$AoA,df.ortho$OSC_te.z), color = "darkred", size = 2) +
ggtitle(expression("objective AoA and" ~ OSC[rnd] ~ ": Pearson's r"), subtitle = subtitle_osc_rnd.te)  +
labs(x = 'r', y = 'freq') +
coord_cartesian(xlim = (c(-0.55, 0.1)), ylim = (c(0, 100)))
(1+sum(stats_rnd$cor.AoA.osc_te_rnd <= cor(df.ortho$AoA,df.ortho$OSC_te.z)))/(length(stats_rnd$cor.AoA.osc_te_rnd)+1)
p2.fsc_rnd = ggplot(data = stats_rnd, aes(x=cor.aoa.osc_ld_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = cor(df.ortho$AoA,df.ortho$OSC_ld.z), color = "darkred", size = 2) +
ggtitle(" ", subtitle = subtitle_osc_rnd.ld)  +
labs(x = 'r', y = ' ') +
coord_cartesian(xlim = (c(-0.55, 0.1)), ylim = (c(0, 100)))
(1+sum(stats_rnd$cor.AoA.osc_ld_rnd <= cor(df.ortho$AoA,df.ortho$OSC_ld.z)))/(length(stats_rnd$cor.AoA.osc_ld_rnd)+1)
p3.fsc_rnd = ggplot(data = stats_rnd, aes(x=cor.aoa.psc_te_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = cor(df.phono$AoA,df.phono$PSC_te.z), color = "darkred", size = 2) +
ggtitle(expression("objective AoA and" ~ PSC[rnd] ~ ": Pearson's r"), subtitle = subtitle_psc_rnd.te)  +
labs(x = 'r', y = 'freq') +
coord_cartesian(xlim = (c(-0.55, 0.1)), ylim = (c(0, 120)))
(1+sum(stats_rnd$cor.AoA.psc_te_rnd <= cor(df.phono$AoA,df.phono$PSC_te.z)))/(length(stats_rnd$cor.AoA.psc_te_rnd)+1)
p4.fsc_rnd = ggplot(data = stats_rnd, aes(x=cor.aoa.psc_ld_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = cor(df.phono$AoA,df.phono$PSC_ld.z), color = "darkred", size = 2) +
ggtitle(" ", subtitle = subtitle_psc_rnd.ld)  +
labs(x = 'r', y = ' ') +
coord_cartesian(xlim = (c(-0.55, 0.1)), ylim = (c(0, 120)))
(1+sum(stats_rnd$cor.AoA.psc_ld_rnd <= cor(df.phono$AoA,df.phono$PSC_ld.z)))/(length(stats_rnd$cor.AoA.psc_ld_rnd)+1)
grid.arrange(p1.fsc_rnd, p2.fsc_rnd, ncol = 2)
grid.arrange(p3.fsc_rnd, p4.fsc_rnd, ncol = 2)
# DeltaAIC, linear models
range(stats_rnd$deltaAIC.osc_te_rnd)
p1.fsc_rnd.aic = ggplot(data = stats_rnd, aes(x=deltaAIC.osc_te_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base.ortho.aic - osc_model.te.aic, color = "darkred", size = 2) +
ggtitle(expression("objective AoA and" ~ OSC[rnd] ~": LM " ~ Delta[AIC]), subtitle = subtitle_osc_rnd.te) +
labs(x = expression(Delta[AIC]), y = 'freq') +
coord_cartesian(xlim = (c(-2.5, 20)), ylim = (c(0, 650)))
(1+sum(stats_rnd$deltaAIC.osc_te_rnd >= (base_model.ortho.int.aic - osc_model.te.aic)))/(length(iters)+1)
range(stats_rnd$deltaAIC.osc_ld_rnd)
p2.fsc_rnd.aic = ggplot(data = stats_rnd, aes(x=deltaAIC.osc_ld_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base.ortho.aic - osc_model.ld.aic, color = "darkred", size = 2) +
ggtitle(" ", subtitle = subtitle_osc_rnd.ld)  +
labs(x = expression(Delta[AIC]), y = ' ')  +
coord_cartesian(xlim = (c(-2.5, 135)), ylim = (c(0, 650)))
(1+sum(stats_rnd$deltaAIC.osc_ld_rnd >= (base_model.ortho.int.aic - osc_model.ld.aic)))/(length(iters)+1)
range(stats_rnd$deltaAIC.psc_te_rnd)
p3.fsc_rnd.aic = ggplot(data = stats_rnd, aes(x=deltaAIC.psc_te_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base.phono.aic - psc_model.te.aic, color = "darkred", size = 2) +
ggtitle(expression("objective AoA and" ~ PSC[rnd] ~": LM " ~ Delta[AIC]), subtitle = subtitle_psc_rnd.te)  +
labs(x = expression(Delta[AIC]), y = 'freq')  +
coord_cartesian(xlim = (c(-2.5, 18)), ylim = (c(0, 250)))
(1+sum(stats_rnd$deltaAIC.psc_te_rnd >= (base_model.phono.int.aic - psc_model.te.aic)))/(length(iters)+1)
range(stats_rnd$deltaAIC.psc_ld_rnd)
p4.fsc_rnd.aic = ggplot(data = stats_rnd, aes(x=deltaAIC.psc_ld_rnd)) +
geom_histogram(bins = 100, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base.phono.aic - psc_model.ld.aic, color = "darkred", size = 2) +
ggtitle(" ", subtitle = subtitle_psc_rnd.ld)  +
labs(x = expression(Delta[AIC]), y = ' ')   +
coord_cartesian(xlim = (c(-2.5, 260)), ylim = (c(0, 250)))
(1+sum(stats_rnd$deltaAIC.psc_ld_rnd >= (base_model.phono.int.aic - psc_model.ld.aic)))/(length(iters)+1)
grid.arrange(p3.fsc_rnd.aic, p4.fsc_rnd.aic, ncol = 2)
grid.arrange(p1.fsc_rnd.aic, p2.fsc_rnd.aic, ncol = 2)
##### VOCABULARY SUBSET BASELINE #####
parent_dir = "/media/gioca90/University/TiU/Research/Projects/ba_thesis/output/FSCsubset/"
setwd(parent_dir)
iters = seq(1, 500, 1)
rates = c(50, 75)
stats_subset = NULL
for (r in rates) {
print(sprintf("Processing subsets at %s of the whole reference vocabulary", r))
print(getwd())
setwd(sprintf('rate%s', r))
for (i in iters) {
print(sprintf("Processing iteration %s", i))
df_subset = read.csv(sprintf("df%s.csv", i), header = T, sep = ',')
colnames(df_subset)[which(names(df_subset) == "OSC_te")] <- "OSC_te_subset"
colnames(df_subset)[which(names(df_subset) == "OSC_ld")] <- "OSC_ld_subset"
colnames(df_subset)[which(names(df_subset) == "PSC_te")] <- "PSC_te_subset"
colnames(df_subset)[which(names(df_subset) == "PSC_ld")] <- "PSC_ld_subset"
df.phono = merge(df.phono, df_subset[c('word', "PSC_te_subset", "PSC_ld_subset")], by='word')
df.ortho = merge(df.ortho, df_subset[c('word', "OSC_te_subset", "OSC_ld_subset")], by='word')
df.ortho$OSC_te_subset.z = c(scale(box_cox_transf(df.ortho$OSC_te_subset + 0.0001, -10, 10), center = T, scale = T))
df.ortho$OSC_ld_subset.z = c(scale(box_cox_transf(df.ortho$OSC_ld_subset + 0.0001, -10, 10), center = T, scale = T))
df.phono$PSC_te_subset.z = c(scale(box_cox_transf(df.phono$PSC_te_subset + 0.0001, -10, 10), center = T, scale = T))
df.phono$PSC_ld_subset.z = c(scale(box_cox_transf(df.phono$PSC_ld_subset + 0.0001, -10, 10), center = T, scale = T))
osc_model.te.subset <- lm(formula = AoA ~ n_chars.z + concr.z + val.z + freq.z + old.z*snd.z + morph + OSC_te_subset.z, data = df.ortho)
deltaAIC.osc_te_subset = base_model.ortho.int.aic - AIC(osc_model.te.subset)
osc_model.ld.subset <- lm(formula = AoA ~ n_chars.z + concr.z + val.z + freq.z + old.z*snd.z + morph + OSC_ld_subset.z, data = df.ortho)
deltaAIC.osc_ld_subset = base_model.ortho.int.aic - AIC(osc_model.ld.subset)
psc_model.te.subset <- lm(formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z*snd.z + morph + PSC_te_subset.z, data = df.phono)
deltaAIC.psc_te_subset = base_model.phono.int.aic - AIC(psc_model.te.subset)
psc_model.ld.subset <- lm(formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + pnd.z*snd.z + morph + PSC_ld_subset.z, data = df.phono)
deltaAIC.psc_ld_subset = base_model.phono.int.aic - AIC(psc_model.ld.subset)
df.phono = subset(df.phono, select = -c(PSC_te_subset, PSC_ld_subset))
df.ortho = subset(df.ortho, select = -c(OSC_te_subset, OSC_ld_subset))
stats_subset = rbind(stats_subset,
data.frame(i, r,
deltaAIC.osc_te_subset, deltaAIC.osc_ld_subset, deltaAIC.psc_te_subset, deltaAIC.psc_ld_subset))
}
setwd(parent_dir)
print(getwd())
}
rm(i, r,
deltaAIC.osc_te_subset, deltaAIC.osc_ld_subset, deltaAIC.psc_te_subset, deltaAIC.psc_ld_subset,
psc_model.ld.subset, psc_model.te.subset, osc_model.ld.subset, osc_model.te.subset)
stats_subset$r <- mapvalues(stats_subset$r, from = c(50, 75), to = c("sampling rate: 50%", "sampling rate: 75%"))
subtitle_osc_subset.te = expression(OSC[te])
subtitle_osc_subset.ld = expression(OSC[ld])
subtitle_psc_subset.te = expression(PSC[te])
subtitle_psc_subset.ld = expression(PSC[ld])
# DeltaAIC, linear models
range(stats_subset$deltaAIC.osc_te_subset)
p1.fsc_subset.aic = ggplot(data = stats_subset, aes(x=deltaAIC.osc_te_subset)) +
geom_histogram(bins = 50, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base_model.ortho.int.aic - osc_model.te.aic, color = "darkred", size = 2) +
ggtitle(expression("subjective AoA and OSC (subset): LM " ~ Delta[AIC]), subtitle = subtitle_osc_subset.te)  +
labs(x = expression(Delta[AIC]), y = 'freq') +
coord_cartesian(xlim = (c(0, 90)), ylim = (c(0, 60))) +
facet_grid(. ~ r)
(1+sum(stats_subset$deltaAIC.osc_te_subset >= (base_model.ortho.int.aic - osc_model.te.aic)))/(length(iters)+1)
range(stats_subset$deltaAIC.osc_ld_subset)
p2.fsc_subset.aic = ggplot(data = stats_subset, aes(x=deltaAIC.osc_ld_subset)) +
geom_histogram(bins = 50, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base_model.ortho.int.aic - osc_model.ld.aic, color = "darkred", size = 2) +
ggtitle(" ", subtitle = subtitle_osc_subset.ld)  +
labs(x = expression(Delta[AIC]), y = ' ')  +
coord_cartesian(xlim = (c(0, 215)), ylim = (c(0, 60))) +
facet_grid(. ~ r)
(1+sum(stats_subset$deltaAIC.osc_ld_subset >= (base_model.ortho.int.aic - osc_model.ld.aic)))/(length(iters)+1)
range(stats_subset$deltaAIC.psc_te_subset)
p3.fsc_subset.aic = ggplot(data = stats_subset, aes(x=deltaAIC.psc_te_subset)) +
geom_histogram(bins = 50, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base_model.phono.int.aic - psc_model.te.aic, color = "darkred", size = 2) +
ggtitle(expression("objective AoA and PSC (subset): LM " ~ Delta[AIC]), subtitle = subtitle_psc_subset.te)  +
labs(x = expression(Delta[AIC]), y = 'freq')  +
coord_cartesian(xlim = (c(0, 90)), ylim = (c(0, 60))) +
facet_grid(. ~ r)
(1+sum(stats_subset$deltaAIC.psc_te_subset >= (base_model.phono.int.aic - psc_model.te.aic)))/(length(iters)+1)
range(stats_subset$deltaAIC.psc_ld_subset)
p4.fsc_subset.aic = ggplot(data = stats_subset, aes(x=deltaAIC.psc_ld_subset)) +
geom_histogram(bins = 50, color = "steelblue", fill = "steelblue") +
geom_vline(xintercept = base.phono.aic - psc_model.ld.aic, color = "darkred", size = 2) +
ggtitle(" ", subtitle = subtitle_psc_subset.ld)  +
labs(x = expression(Delta[AIC]), y = ' ')   +
coord_cartesian(xlim = (c(0, 325)), ylim = (c(0, 60))) +
facet_grid(. ~ r)
(1+sum(stats_subset$deltaAIC.psc_ld_subset >= (base_model.phono.int.aic - psc_model.ld.aic)))/(length(iters)+1)
grid.arrange(p3.fsc_subset.aic, p4.fsc_subset.aic, ncol = 2)
grid.arrange(p1.fsc_subset.aic, p2.fsc_subset.aic, ncol = 2)
##### PCA FOR NEIGHBORHOOD MEASURES - ORTHOGRAPHY #####
neighborhoods_ld.ortho.pca <- prcomp(df.ortho[c("OSC_ld.z", "old.z", "snd.z")], center = TRUE, scale. = TRUE)
plot(cumsum(neighborhoods_ld.ortho.pca$sdev^2 / sum(neighborhoods_ld.ortho.pca$sdev^2)), type="b", col='steelblue')
pc_ortho = df.ortho[c("OSC_ld.z", "old.z", "snd.z")]
colnames(pc_ortho) <- c("OSCld", "OLD20", "SND")
corrplot(cor(neighborhoods_ld.ortho.pca$x[,1:3], pc_ortho),
title = "Correlation matrix: PCs",
mar = c(2,2,2,2),
method = 'number',
tl.col = 'black',
tl.srt = 30)
rm(pc_ortho)
df.ortho['PC1_ld_ortho'] = neighborhoods_ld.ortho.pca$x[,1]
df.ortho['PC2_ld_ortho'] = neighborhoods_ld.ortho.pca$x[,2]
df.ortho['PC3_ld_ortho'] = neighborhoods_ld.ortho.pca$x[,3]
pca_ld_model.ortho <- lm(
formula = AoA ~ n_chars.z + concr.z + val.z + freq.z + morph + PC1_ld_ortho + PC2_ld_ortho + PC3_ld_ortho, data = df.ortho
)
pca_ld_model.ortho.aic = AIC(pca_ld_model.ortho)
# 38302.7
summary(pca_ld_model.ortho)$r.sq
# 0.4440944
summary(pca_ld_model.ortho)
# all principal components are significant, but PC2 and PC3 only slightly
# PC1 high when OSC high, OLD low, SND low: negative effect on AoA
# PC2 high when OLD higher, SND low: positive effect on AoA
# PC3 hgh when OSC higher, OLD higher, SND slightly higher: negative effect on AoA
base.ortho.aic - pca_ld_model.ortho.aic
##### PCA FOR NEIGHBORHOOD MEASURES - PHONOLOGY #####
neighborhoods_ld.phono.pca <- prcomp(df.phono[c("PSC_ld.z", "pnd.z", "snd.z")], center = TRUE, scale. = TRUE)
plot(cumsum(neighborhoods_ld.phono.pca$sdev^2 / sum(neighborhoods_ld.phono.pca$sdev^2)), type="b", col='steelblue')
pc_phono = df.phono[c("PSC_ld.z", "pnd.z", "snd.z")]
colnames(pc_phono) <- c("PSCld", "PND", "SND")
corrplot(cor(neighborhoods_ld.phono.pca$x[,1:3], pc_phono),
title = "Correlation matrix: PCs",
mar = c(2,2,2,2),
method = 'number',
tl.col = 'black',
tl.srt = 30)
rm(pc_phono)
df.phono['PC1_ld_phono'] = neighborhoods_ld.phono.pca$x[,1]
df.phono['PC2_ld_phono'] = neighborhoods_ld.phono.pca$x[,2]
df.phono['PC3_ld_phono'] = neighborhoods_ld.phono.pca$x[,3]
pca_ld_model.phono <- lm(
formula = AoA ~ n_phons.z + concr.z + val.z + freq.z + morph + PC1_ld_phono + PC2_ld_phono + PC3_ld_phono, data = df.phono
)
pca_ld_model.phono.aic = AIC(pca_ld_model.phono)
# 30194.1
summary(pca_ld_model.phono)$r.sq
# 0.4788061
summary(pca_ld_model.phono)
# only PC1 and PC3 are significant, PC2 < 0.1
# PC1 high when PSCld high, PND high, SND lower: negative effect on AoA
# PC3 high when PSCld low, PND higher, SND slightly lower: positive effect on AoA
base.phono.aic - pca_ld_model.phono.aic
save.image("/media/gioca90/University/TiU/Research/Projects/ba_thesis/stats/fsc_analyses_B&B.RData")
